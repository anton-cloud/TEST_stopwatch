{"version":3,"sources":["components/stopwatch/StopwatchStyled.js","components/stopwatch/Stopwatch.js","utils/toStopWatch.js","components/stopwatch/StopwatchContainer.js","components/App.js","index.js"],"names":["StopwatchStyled","styled","div","Stopwatch","result","isStarted","onHandleStop","waitButtonRef","onHandleReset","onHandleStart","className","onClick","ref","toStopWatch","time","count","map","item","Math","floor","toString","length","join","StopwatchContainer","useState","seconds","setSeconds","setIsStarted","intervalRef","useRef","subscribeToInterval","initSeconds","current","interval","pipe","scan","subscribe","unSubscribeToInterval","unsubscribe","useEffect","_waitBtn","fromEvent","_buffer","debounceTime","_subscribeWaitdBtn","buffer","list","filter","x","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0LAEaA,E,MAAkBC,EAAOC,IAAV,urC,OC2BbC,EA1BG,SAAC,GAAsF,IAApFC,EAAmF,EAAnFA,OAAQC,EAA2E,EAA3EA,UAAWC,EAAgE,EAAhEA,aAAcC,EAAkD,EAAlDA,cAAeC,EAAmC,EAAnCA,cAAeC,EAAoB,EAApBA,cAClF,OACE,cAACT,EAAD,UACE,sBAAKU,UAAU,kBAAf,UACE,oBAAIA,UAAU,mBAAd,uBACA,mBAAGA,UAAU,kBAAb,SAAgCN,IAC/BC,EACC,wBAAQK,UAAU,oBAAoBC,QAASL,EAA/C,SACE,sBAAMI,UAAU,yBAAhB,qBAGF,wBAAQA,UAAU,oBAAoBC,QAASF,EAA/C,SACE,sBAAMC,UAAU,yBAAhB,sBAGJ,wBAAQA,UAAU,oBAAoBE,IAAKL,EAA3C,SACE,sBAAMG,UAAU,yBAAhB,qBAEF,wBAAQA,UAAU,oBAAoBC,QAASH,EAA/C,SACE,sBAAME,UAAU,yBAAhB,4B,gECXKG,EAXK,WAAe,IAAdC,EAAa,uDAAN,EACtBC,EAAQ,EACZ,MAAO,CAAC,KAAM,GAAI,GACfC,KAAI,SAAAC,GAGH,OAFAF,EAAQG,KAAKC,MAAML,EAAOG,GAAMG,WAChCN,GAAcG,EACPF,EAAMM,OAAS,EAAI,IAAMN,EAAQA,KAEzCO,KAAK,MCmEKC,EArEY,WAAO,IAAD,EACDC,mBAAS,GADR,mBACxBC,EADwB,KACfC,EADe,OAEGF,oBAAS,GAFZ,mBAExBnB,EAFwB,KAEbsB,EAFa,KAGzBC,EAAcC,iBAAO,MACrBtB,EAAgBsB,iBAAO,MAEvBC,EAAsB,WAAsB,IAArBC,EAAoB,uDAAN,EACrCH,EAAYI,UAEhBJ,EAAYI,QAAUC,YAAS,KAC5BC,KAAKC,aAAK,SAAArB,GAAI,OAAIA,EAAO,IAAGiB,IAC5BK,UAAUV,KAGTW,EAAwB,WACvBT,EAAYI,UAEjBJ,EAAYI,QAAQM,cACpBV,EAAYI,QAAU,OAuCxB,OAlBAO,qBAAU,WACR,IAAMC,EAAWC,YAAUlC,EAAcyB,QAAS,SAC5CU,EAAUF,EAASN,KAAKS,YAAa,MAErCC,EAAqBJ,EACxBN,KACCW,YAAOH,GACP1B,aAAI,SAAA8B,GAAI,OAAIA,EAAKzB,UACjB0B,aAAO,SAAAC,GAAC,OAAU,IAANA,MAEbZ,WAAU,WACJR,EAAYI,UACjBL,GAAa,GACbU,QAGJ,OAAO,kBAAMO,EAAmBN,iBAC/B,IAED,cAAC,EAAD,CACElC,OAAQS,EAAYY,GACpBpB,UAAWA,EACXE,cAAeA,EACfE,cAzCkB,WACpBkB,GAAa,GACbF,EAAU,EAAIK,EAAoBL,GAAWK,KAwC3CxB,aArCiB,WACnBoB,EAAW,GACXC,GAAa,GACbU,KAmCE7B,cAhCkB,WACpBkB,EAAW,GACXC,GAAa,GACbU,IACAP,QCpCWmB,EAJH,WACV,OAAO,cAAC,EAAD,KCETC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.18c6a787.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const StopwatchStyled = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding-top: 50px;\r\n  .Stopwatch {\r\n    &__wrap {\r\n      background-image: url(\"https://cdn-icons-png.flaticon.com/512/4893/4893021.png\");\r\n      background-size: 100% auto;\r\n      background-position: center;\r\n      background-repeat: no-repeat;\r\n    }\r\n    &__title,\r\n    &__text,\r\n    &__button-text {\r\n      text-align: center;\r\n      font-family: Raleway;\r\n      font-style: normal;\r\n      font-weight: 400;\r\n      font-feature-settings: \"lnum\";\r\n    }\r\n\r\n    &__title {\r\n      color: #e0e0e0;\r\n      font-weight: 700;\r\n      font-size: 28px;\r\n      border-bottom: 2px solid;\r\n\r\n      margin: 20px 0 0 0;\r\n    }\r\n    &__text {\r\n      color: #828282;\r\n      font-size: 24px;\r\n\r\n      margin: 15px 0;\r\n    }\r\n    &__button {\r\n      background: #f31d42;\r\n      box-shadow: inset 0 6px 5px hsla(0, 0%, 100%, 0.3);\r\n      border-radius: 30px;\r\n      min-height: 20px;\r\n      min-width: 40px;\r\n      outline: none;\r\n      border: none;\r\n      cursor: pointer;\r\n      transition: 0.2s ease;\r\n      margin: 5px;\r\n      &:hover {\r\n        transform: scale(1.1);\r\n      }\r\n    }\r\n\r\n    &__button-text {\r\n      color: #fff;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { StopwatchStyled } from \"./StopwatchStyled\";\r\n\r\nconst Stopwatch = ({ result, isStarted, onHandleStop, waitButtonRef, onHandleReset, onHandleStart }) => {\r\n  return (\r\n    <StopwatchStyled>\r\n      <div className=\"Stopwatch__wrap\">\r\n        <h2 className=\"Stopwatch__title\">Stopwatch</h2>\r\n        <p className=\"Stopwatch__text\">{result}</p>\r\n        {isStarted ? (\r\n          <button className=\"Stopwatch__button\" onClick={onHandleStop}>\r\n            <span className=\"Stopwatch__button-text\"> Stop</span>\r\n          </button>\r\n        ) : (\r\n          <button className=\"Stopwatch__button\" onClick={onHandleStart}>\r\n            <span className=\"Stopwatch__button-text\"> Start</span>\r\n          </button>\r\n        )}\r\n        <button className=\"Stopwatch__button\" ref={waitButtonRef}>\r\n          <span className=\"Stopwatch__button-text\"> Wait</span>\r\n        </button>\r\n        <button className=\"Stopwatch__button\" onClick={onHandleReset}>\r\n          <span className=\"Stopwatch__button-text\"> Reset</span>\r\n        </button>\r\n      </div>\r\n    </StopwatchStyled>\r\n  );\r\n};\r\n\r\nexport default Stopwatch;\r\n","const toStopWatch = (time = 1) => {\r\n  let count = 0;\r\n  return [3600, 60, 1]\r\n    .map(item => {\r\n      count = Math.floor(time / item).toString();\r\n      time = time % item;\r\n      return count.length < 2 ? \"0\" + count : count;\r\n    })\r\n    .join(\":\");\r\n};\r\n\r\nexport default toStopWatch;\r\n","import React from \"react\";\r\nimport { buffer, debounceTime, filter, fromEvent, interval, map, scan } from \"rxjs\";\r\nimport { useRef, useState, useEffect } from \"react\";\r\nimport { toStopWatch } from \"../../utils\";\r\nimport { Stopwatch } from \"../../components\";\r\n\r\nconst StopwatchContainer = () => {\r\n  const [seconds, setSeconds] = useState(0);\r\n  const [isStarted, setIsStarted] = useState(false);\r\n  const intervalRef = useRef(null);\r\n  const waitButtonRef = useRef(null);\r\n\r\n  const subscribeToInterval = (initSeconds = 0) => {\r\n    if (intervalRef.current) return;\r\n\r\n    intervalRef.current = interval(1000)\r\n      .pipe(scan(time => time + 1, initSeconds))\r\n      .subscribe(setSeconds);\r\n  };\r\n\r\n  const unSubscribeToInterval = () => {\r\n    if (!intervalRef.current) return;\r\n\r\n    intervalRef.current.unsubscribe();\r\n    intervalRef.current = null;\r\n  };\r\n\r\n  const onHandleStart = () => {\r\n    setIsStarted(true);\r\n    seconds > 0 ? subscribeToInterval(seconds) : subscribeToInterval();\r\n  };\r\n\r\n  const onHandleStop = () => {\r\n    setSeconds(0);\r\n    setIsStarted(false);\r\n    unSubscribeToInterval();\r\n  };\r\n\r\n  const onHandleReset = () => {\r\n    setSeconds(0);\r\n    setIsStarted(true);\r\n    unSubscribeToInterval();\r\n    subscribeToInterval();\r\n  };\r\n\r\n  useEffect(() => {\r\n    const _waitBtn = fromEvent(waitButtonRef.current, \"click\");\r\n    const _buffer = _waitBtn.pipe(debounceTime(300));\r\n\r\n    const _subscribeWaitdBtn = _waitBtn\r\n      .pipe(\r\n        buffer(_buffer),\r\n        map(list => list.length),\r\n        filter(x => x === 2)\r\n      )\r\n      .subscribe(() => {\r\n        if (!intervalRef.current) return;\r\n        setIsStarted(false);\r\n        unSubscribeToInterval();\r\n      });\r\n\r\n    return () => _subscribeWaitdBtn.unsubscribe();\r\n  }, []);\r\n  return (\r\n    <Stopwatch\r\n      result={toStopWatch(seconds)}\r\n      isStarted={isStarted}\r\n      waitButtonRef={waitButtonRef}\r\n      onHandleStart={onHandleStart}\r\n      onHandleStop={onHandleStop}\r\n      onHandleReset={onHandleReset}\r\n    />\r\n  );\r\n};\r\n\r\nexport default StopwatchContainer;\r\n","import React from \"react\";\r\nimport { StopwatchContainer } from \"../components\";\r\nconst App = () => {\r\n  return <StopwatchContainer />;\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}